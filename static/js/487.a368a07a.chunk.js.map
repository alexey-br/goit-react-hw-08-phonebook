{"version":3,"file":"static/js/487.a368a07a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/validationSchema.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsItem/ContactsItem.styled.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(filter)\n    );\n  }\n);\n","import * as yup from 'yup';\n\nexport const schema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagna\"\n    )\n    .min(5, 'To short. Minimum 5 letters')\n    .max(30, 'To long. Maximum 30 letters')\n    .required(),\n  number: yup\n    .string()\n    .trim()\n    .min(8, 'To short. Minimum 8 digits')\n    .max(30, 'To long. Maximum 30 digits')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n","import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const InputItem = styled.label`\n  display: block;\n`;\n\nexport const InputLabel = styled.span`\n  display: block;\n`;\n\nexport const Input = styled(Field)`\n  font-size: inherit;\n  font-family: inherit;\n  width: 200px;\n`;\n\nexport const SubmitBtn = styled.button`\n  font-size: inherit;\n  font-family: inherit;\n  cursor: pointer;\n\n  transition: transform, 250ms;\n\n  :active {\n    transform: translateY(2px);\n  }\n`;\n\nexport const ValidationError = styled(ErrorMessage)`\n  color: red;\n`;\n","import { Formik, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { schema } from './validationSchema';\nimport {\n  InputItem,\n  Input,\n  InputLabel,\n  SubmitBtn,\n  ValidationError,\n} from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <InputItem>\n          <InputLabel>Name:</InputLabel>\n          <Input type=\"text\" name=\"name\" autoComplete=\"off\" />\n          <ValidationError component=\"span\" name=\"name\" />\n        </InputItem>\n        <InputItem>\n          <InputLabel>Number:</InputLabel>\n          <Input type=\"tel\" name=\"number\" autoComplete=\"off\" />\n          <ValidationError component=\"span\" name=\"number\" />\n        </InputItem>\n        <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n      </Form>\n    </Formik>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.span`\n  display: block;\n`;\n\nexport const FilterInput = styled.input`\n  font-size: inherit;\n  font-family: inherit;\n  width: 200px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onInput = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <label>\n      <FilterLabel>Find contacts by name:</FilterLabel>\n      <FilterInput type=\"text\" value={filter} onChange={onInput} />\n    </label>\n  );\n}\n","import styled from '@emotion/styled';\nimport { IoIosContact } from 'react-icons/io';\n\nexport const Contact = styled.li`\n  display: flex;\n  align-items: center;\n  list-style: none;\n\n  :not(:last-child) {\n  }\n`;\n\nexport const ContactIcon = styled(IoIosContact)``;\n\nexport const ContactName = styled.span`\n  display: inline-block;\n  min-width: 150px;\n`;\n\nexport const ContactNumber = styled.span`\n  display: inline-block;\n  min-width: 170px;\n`;\n\nexport const DeleteBtn = styled.button`\n  font-family: inherit;\n  cursor: pointer;\n  opacity: 0.3;\n\n  transition: transform, 250ms;\n  transition: opacity, 250ms ease-in-out;\n\n  :hover {\n    opacity: 1;\n  }\n\n  :active {\n    transform: translateY(2px);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  Contact,\n  ContactIcon,\n  ContactName,\n  ContactNumber,\n  DeleteBtn,\n} from './ContactsItem.styled';\n\nexport default function ContactsItem({ contact }) {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <Contact>\n      <ContactIcon />\n      <ContactName>{name}: </ContactName>\n      <ContactNumber>{number}</ContactNumber>\n      <DeleteBtn onClick={() => handleDelete(id)}>Delete</DeleteBtn>\n    </Contact>\n  );\n}\n\nContactsItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport ContactsItem from '../ContactsItem';\n\nexport default function ContactList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul>\n      {filteredContacts.map(contact => {\n        return <ContactsItem key={contact.id} contact={contact} />;\n      })}\n    </ul>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\nimport {\n  ErrorMessage,\n  HeaderH1,\n  HeaderH2,\n  Loader,\n} from '../components/reusableComponents';\nimport { Box } from '@mui/material';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box sx={{ m: 4 }}>\n      <HeaderH1>Phonebook</HeaderH1>\n      <ContactForm />\n      <HeaderH2>Contacts:</HeaderH2>\n      <Filter />\n      {!error ? <ContactList /> : <ErrorMessage />}\n      {isLoading && <Loader />}\n    </Box>\n  );\n}\n"],"names":["selectIsLoading","state","contacts","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","items","name","toLocaleLowerCase","includes","schema","yup","shape","trim","matches","min","max","required","number","InputItem","styled","InputLabel","Input","Field","SubmitBtn","ValidationError","ErrorMessage","initialValues","ContactForm","dispatch","useDispatch","validationSchema","onSubmit","resetForm","addContact","type","autoComplete","component","FilterLabel","FilterInput","Filter","useSelector","value","onChange","e","changeFilter","target","Contact","ContactIcon","IoIosContact","ContactName","ContactNumber","DeleteBtn","ContactsItem","contact","id","onClick","contactId","deleteContact","ContactList","filteredContacts","map","Contacts","useEffect","fetchContacts","Box","sx","m"],"sourceRoot":""}