{"version":3,"file":"static/js/519.482bbafb.chunk.js","mappings":"kSAMMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGG,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMXC,GAASC,EAAAA,EAAAA,IAAU,CAAER,cAAAA,EAAeS,SAJrB,SAAAC,GACnBL,GAASM,EAAAA,EAAAA,IAASD,GACnB,IAID,OACE,iCACE,SAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,SAA9C,sBAGA,iBAAMN,SAAUF,EAAOS,aAAvB,UACE,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,SAAU,IACVC,EAAG,YACHC,IAAK,GANT,WASE,SAACC,EAAA,EAAD,CACEvB,KAAK,OACLwB,GAAG,OACHC,MAAM,OACNC,MAAOpB,EAAOG,OAAOT,KACrB2B,SAAUrB,EAAOsB,aACjBC,UAAU,KAEZ,SAACN,EAAA,EAAD,CACEvB,KAAK,QACLwB,GAAG,QACHC,MAAM,QACNK,KAAK,QACLJ,MAAOpB,EAAOG,OAAOR,MACrB0B,SAAUrB,EAAOsB,aACjBC,UAAU,KAEZ,SAACN,EAAA,EAAD,CACEO,KAAK,WACL9B,KAAK,WACLwB,GAAG,WACHC,MAAM,WACNC,MAAOpB,EAAOG,OAAOP,SACrByB,SAAUrB,EAAOsB,aACjBC,UAAU,KAEZ,SAACE,EAAA,EAAD,CAAQD,KAAK,SAASlB,QAAQ,YAAYoB,KAAK,QAA/C,6BAOT,C,cC/Dc,SAASC,IACtB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,OACE,iCACE,SAACjC,EAAD,IACC+B,IAAS,SAAC,KAAD,CAAcA,MAAOA,EAAOG,SAAUC,EAAAA,MAGrD,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { useFormik } from 'formik';\nimport { Button, TextField, Typography } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Box } from '@mui/system';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n    dispatch(register(values));\n  };\n\n  const formik = useFormik({ initialValues, onSubmit: handleSubmit });\n\n  return (\n    <>\n      <Typography variant=\"h4\" component=\"h1\" align=\"center\">\n        Sign up\n      </Typography>\n      <form onSubmit={formik.handleSubmit}>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            maxWidth: 500,\n            m: '20px auto',\n            gap: 3,\n          }}\n        >\n          <TextField\n            name=\"name\"\n            id=\"name\"\n            label=\"Name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            required={true}\n          />\n          <TextField\n            name=\"email\"\n            id=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            required={true}\n          />\n          <TextField\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            label=\"Password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            required={true}\n          />\n          <Button type=\"submit\" variant=\"contained\" size=\"large\">\n            Register\n          </Button>\n        </Box>\n      </form>\n    </>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { selectError } from 'redux/auth/selectors';\nimport { setAuthError } from 'redux/auth/authSlice';\nimport RegisterForm from 'components/RegisterForm';\nimport { ErrorMessage } from 'components/reusableComponents';\n\nexport default function Register() {\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      <RegisterForm />\n      {error && <ErrorMessage error={error} setError={setAuthError} />}\n    </>\n  );\n}\n"],"names":["initialValues","name","email","password","RegisterForm","dispatch","useDispatch","formik","useFormik","onSubmit","values","register","Typography","variant","component","align","handleSubmit","Box","sx","display","flexDirection","maxWidth","m","gap","TextField","id","label","value","onChange","handleChange","required","type","Button","size","Register","error","useSelector","selectError","setError","setAuthError"],"sourceRoot":""}