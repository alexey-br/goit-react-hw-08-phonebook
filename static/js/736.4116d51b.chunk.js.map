{"version":3,"file":"static/js/736.4116d51b.chunk.js","mappings":"0PA2BA,GAzBYA,E,QAAAA,K,UCINC,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGG,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMXC,GAASC,EAAAA,EAAAA,IAAU,CAAER,cAAAA,EAAeS,SAJrB,SAAAC,GACnBL,GAASM,EAAAA,EAAAA,IAASD,GACnB,IAID,OACE,iCACE,SAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,MAAM,SAA9C,sBAGA,iBAAMN,SAAUF,EAAOS,aAAvB,UACE,UAAC,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,SAAU,IACVC,EAAG,YACHC,IAAK,GANT,WASE,SAACC,EAAA,EAAD,CACEtB,KAAK,OACLuB,GAAG,OACHC,MAAM,OACNC,MAAOnB,EAAOG,OAAOT,KACrB0B,SAAUpB,EAAOqB,aACjBC,UAAU,KAEZ,SAACN,EAAA,EAAD,CACEtB,KAAK,QACLuB,GAAG,QACHC,MAAM,QACNK,KAAK,QACLJ,MAAOnB,EAAOG,OAAOR,MACrByB,SAAUpB,EAAOqB,aACjBC,UAAU,KAEZ,SAACN,EAAA,EAAD,CACEO,KAAK,WACL7B,KAAK,WACLuB,GAAG,WACHC,MAAM,WACNC,MAAOnB,EAAOG,OAAOP,SACrBwB,SAAUpB,EAAOqB,aACjBC,UAAU,KAEZ,SAACE,EAAA,EAAD,CAAQD,KAAK,SAASjB,QAAQ,YAAYmB,KAAK,QAA/C,6BAOT,CCnEc,SAASC,IACtB,OACE,+BACE,SAAC7B,EAAD,KAGL,C","sources":["../node_modules/@mui/system/esm/Box/Box.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import { useFormik } from 'formik';\nimport { Button, TextField, Typography } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Box } from '@mui/system';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n    dispatch(register(values));\n  };\n\n  const formik = useFormik({ initialValues, onSubmit: handleSubmit });\n\n  return (\n    <>\n      <Typography variant=\"h4\" component=\"h1\" align=\"center\">\n        Sign up\n      </Typography>\n      <form onSubmit={formik.handleSubmit}>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            maxWidth: 500,\n            m: '20px auto',\n            gap: 3,\n          }}\n        >\n          <TextField\n            name=\"name\"\n            id=\"name\"\n            label=\"Name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            required={true}\n          />\n          <TextField\n            name=\"email\"\n            id=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            required={true}\n          />\n          <TextField\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            label=\"Password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            required={true}\n          />\n          <Button type=\"submit\" variant=\"contained\" size=\"large\">\n            Register\n          </Button>\n        </Box>\n      </form>\n    </>\n  );\n}\n","import RegisterForm from 'components/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["createBox","initialValues","name","email","password","RegisterForm","dispatch","useDispatch","formik","useFormik","onSubmit","values","register","Typography","variant","component","align","handleSubmit","sx","display","flexDirection","maxWidth","m","gap","TextField","id","label","value","onChange","handleChange","required","type","Button","size","Register"],"sourceRoot":""}